[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "groster"
version = "0.2.0"
description = "A CLI tool to fetch and process World of Warcraft guild rosters, identifying player alts via the Blizzard API."
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["pandas>=2.3.3", "python-dotenv>=1.1.1", "requests>=2.32.5"]

[project.scripts]
groster = "groster.main:main"

[dependency-groups]
dev = ["chardet>=5.2.0", "ruff>=0.14.0"]

[tool.uv]
package = true

[tool.ruff]
target-version = "py312"
extend-exclude = ["build"]

[tool.ruff.lint]
extend-select = [
    "I",      # All imports
    "E",      # All errors
    "W",      # All warnings
    "F",      # All false positives
    "C",      # All complexity
    "Q",      # All quality
    "B006",   # Do not use mutable data structures for argument defaults
    "B904",   # Use `raise ... from err` instead of `raise ...`
    "B905",   # Specify `strict` when using `zip()`
    "ERA001", # No commented out code
    "G004",   # Don't use f-strings for string interpolation in logging
    "INP001", # Packages have __init__.py files
    "PERF",   # All performance issues
    "PLE",    # All pylint errors
    "PLW",    # All pylint warnings
    "RET505", # Unnecessary `else` after `return` statement
    "TID252", # Ban relative imports
    "UP",     # Auto-upgrade syntax to newer versions of Python
    "UP006",  # Enforcing the use of PEP 585 syntax
    "UP007",  # Enforcing the use of PEP 604 syntax
]

[tool.ruff.lint.per-file-ignores]
# Modules where it is expected for there to be no __init.py__
"**/tests/**/" = ["INP001"]

[tool.ruff.lint.isort]
known-first-party = ["groster"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
